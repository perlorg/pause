#!/bin/bash
#
# Startup script for PAUSE-perlbal
#
# chkconfig: 345 85 15
# description: loadbalancer
# processname: perlbal
# pidfile: /var/run/PAUSE-perlbal.pid
# config: /etc/perlbal/perlbal.conf

# Source function library.
. /etc/rc.d/init.d/functions

daemon=/usr/bin/rsync
prog=rsync
pidfile=/var/run/PAUSE-rsyncd.pid
lockfile=/var/lock/subsys/PAUSE-rsyncd
configfile=/etc/rsyncd.conf
RETVAL=0

start() {
        echo -n $"Starting $prog: "
        if [ -e $pidfile ]
                then
                
                if [ -d /proc/`cat $pidfile`/ ]
                then

                        echo "$daemon already running."
                        exit 0;
                else
                        rm -f $pidfile
                fi
        fi

        $daemon --daemon
        RETVAL=$?
        [ $[$RETVAL] -eq 0 ] && echo "[OK]" || echo "[FAILED]"
        if [ $RETVAL = 0 ] ; then
            touch ${lockfile}
        fi
        return $RETVAL
}
stop() {
        echo -n $"Stopping $prog: "
        if [ -f "${pidfile}" ]; then
                ps $(cat "${pidfile}" | head -n 1 | sed -r -e 's/^([\d]+)/\1/g') >& /dev/null
                if [ $[$?] -eq 0 ]; then
                        kill -TERM $(cat "${pidfile}" | head -n 1 | sed -r -e 's/^([\d]+)/\1/g')
                        RETVAL=$?
                else
                        RETVAL=1;
                        echo "No process with pid "$(cat "${pidfile}" | head -n 1 | sed -r -e 's/^([\d]+)/\1/g')" was found.   "
                fi
        else
                RETVAL=1;
                echo -n "No pid file '${pidfile}' was found.   "
        fi
        if [ $[$RETVAL] -eq 0 ]; then
                echo "[OK]" || echo "[FAILED]"
                rm -f ${lockfile} ${pidfile}
        fi
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status -p ${pidfile} PAUSE-rsyncd
        RETVAL=$?
        ;;
  restart|force_reload)
        stop
        start
        ;;
  *)
        echo "Usage: $0 {start|stop|restart|force_reload|status}"
        exit 1
esac

exit $RETVAL
